@using Microsoft.AspNetCore.Identity
@model MyBulkMealsApp.Data.PaginatedList<MyBulkMealsApp.Models.Recipe>
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool showCreatedTime = (ViewData["ShowCreatedTime"] != null && (bool)ViewData["ShowCreatedTime"]);
}

<h1>Recipes</h1>
<hr />

<h2>Popular Searches</h2>
<ul class="list-inline">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="list-inline-item">
            <a class="btn btn-outline-info" asp-action="Created">My Created Recipes</a>
        </li>
    }
    <li class="list-inline-item">
        <a class="btn btn-outline-info" asp-action="Popular">Most Viewed</a>
    </li>
    <li class="list-inline-item">
        <a class="btn btn-outline-info" asp-action="Newest">Newest</a>
    </li>
    <li class="list-inline-item">
        <a class="btn btn-outline-info" asp-action="Random" asp-route-quantity="20">Random</a>
    </li>
</ul>

<div class="m-4">
    <label for="ingredientSearch">Quick Search by Keyword</label>
    <div class="input-group input-group-lg">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-lg">
                <i class="fa fa-search"></i>
            </span>
        </div>
        <input id="ingredientSearch" name="keyword" type="text" class="form-control" aria-describedby="inputGroup-sizing-lg">
        @*<button class="btn btn-primary">GO!</button>*@
    </div>
</div>

<table class="table-bordered table-striped w-100">
    <thead>
        <tr>
            <th>
                Recipe Name
            </th>
            <th>
                @*Verified*@
            </th>

            @if (showCreatedTime)
            {
                <th>
                    Created At
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </a>
                </td>
                <td>
                    @if (item.IsVerified)
                    {
                        <i class="fa fa-check-circle"></i>
                    }
                </td>
                @if (showCreatedTime)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedTime)
                    </td>
                }
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<div>
    <a asp-action="Create">Create New</a>
</div>